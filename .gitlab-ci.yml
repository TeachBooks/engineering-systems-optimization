stages:
  - test
  - build
  - deploy

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  REGISTRY_HOST: localhost:5000
  TAG_LATEST: $REGISTRY_HOST/$CI_PROJECT_NAME/$CI_COMMIT_REF_NAME:latest
  TAG_DRAFT: $REGISTRY_HOST/$CI_PROJECT_NAME-draft/$CI_COMMIT_REF_NAME:latest

cache:
  paths:
    - .cache/pip

# This job tests if the book compiles gracefully after a new addition
test-build:
  stage: test
  image: python:3.11-bullseye
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - pip install -r requirements.txt
    - jupyter-book clean book/
    - jupyter-book build book/

# This job builds the Docker container
build-book:
  stage: build
  image: docker
  rules:
    - if: $CI_COMMIT_BRANCH == "publish" && $CI_PIPELINE_SOURCE == "push"
      variables:
        TAG: $TAG_LATEST
    - if: $CI_COMMIT_BRANCH == "master" && $CI_PIPELINE_SOURCE == "push"
      variables:
        TAG: $TAG_DRAFT
  before_script:
    - docker info
  script:
    - docker build -t $TAG .
    - docker push $TAG

# This job takes down the existing container and starts the new one
deploy-book:
  stage: deploy
  image: docker
  rules:
    - if: $CI_COMMIT_BRANCH == "publish" && $CI_PIPELINE_SOURCE == "push"
  before_script:
    - docker info
    - docker stop $CI_PROJECT_NAME || exit_code=$?
    - if [ $exit_code -ne 0 ]; then echo "Container not found, cannot stop"; else docker rm $CI_PROJECT_NAME; fi
  script:
    - docker run -d -p 8010:8000 --name $CI_PROJECT_NAME $TAG_LATEST # Make sure to use a different port for each book!
  environment:
    name: production
    url: https://interactivetextbooks.citg.tudelft.nl/$CI_PROJECT_NAME

# Deploy the draft version of the book
deploy-draft:
  stage: deploy
  image: docker
  rules:
    - if: $CI_COMMIT_BRANCH == "master" && $CI_PIPELINE_SOURCE == "push"
  before_script:
    - docker info
    - docker stop $CI_PROJECT_NAME-draft || exit_code=$?
    - if [ $exit_code -ne 0 ]; then echo "Container not found, cannot stop"; else docker rm $CI_PROJECT_NAME-draft; fi
  script:
    - docker run -d -p 8011:8000 --name $CI_PROJECT_NAME-draft $TAG_DRAFT
  environment:
    name: draft
    url: https://interactivetextbooks.citg.tudelft.nl/$CI_PROJECT_NAME-draft
